from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from models import Session, UserSettings
from states import AutoReplyState
from keyboards import back_button

router = Router()


@router.callback_query(F.data == "signatures")
async def signatures_handler(callback: types.CallbackQuery):
    with Session() as session:
        user = session.get(UserSettings, callback.from_user.id)

    text = (
        "‚úçÔ∏è **–§–∏—Ä–º–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏**\n\n"
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: {user.greeting or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}\n"
        f"–ü—Ä–æ—â–∞–Ω–∏–µ: {user.farewell or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

    builder = InlineKeyboardBuilder()
    if user.greeting:
        builder.button(text="‚úè –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", callback_data="add_greeting")
        builder.button(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", callback_data="delete_greeting")
    else:
        builder.button(text="üñã –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", callback_data="add_greeting")

    if user.farewell:
        builder.button(text="‚úè –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—â–∞–Ω–∏–µ", callback_data="add_farewell")
        builder.button(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—â–∞–Ω–∏–µ", callback_data="delete_farewell")
    else:
        builder.button(text="üñã –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—â–∞–Ω–∏–µ", callback_data="add_farewell")

    builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="auto_reply_settings")
    builder.adjust(1)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await callback.message.answer(
        text,
        reply_markup=builder.as_markup(),
        parse_mode="Markdown"
    )


@router.callback_query(F.data == "add_greeting")
async def add_greeting_handler(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(AutoReplyState.waiting_greeting)
    await callback.message.answer(
        "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:",
        reply_markup=back_button()
    )


@router.callback_query(F.data == "add_farewell")
async def add_farewell_handler(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(AutoReplyState.waiting_farewell)
    await callback.message.answer(
        "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∏—Ä–º–µ–Ω–Ω—É—é –ø—Ä–æ—â–∞–ª—å–Ω—É—é —Ñ—Ä–∞–∑—É:",
        reply_markup=back_button()
    )


@router.message(AutoReplyState.waiting_greeting)
async def process_greeting(message: types.Message, state: FSMContext):
    with Session() as session:
        user = session.get(UserSettings, message.from_user.id) or UserSettings(user_id=message.from_user.id)
        user.greeting = message.text
        session.add(user)
        session.commit()

    await state.clear()
    await message.answer("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await signatures_handler(types.CallbackQuery(
        from_user=message.from_user,
        id="dummy",
        chat_instance="dummy",
        message=message
    ))


@router.message(AutoReplyState.waiting_farewell)
async def process_farewell(message: types.Message, state: FSMContext):
    with Session() as session:
        user = session.get(UserSettings, message.from_user.id) or UserSettings(user_id=message.from_user.id)
        user.farewell = message.text
        session.add(user)
        session.commit()

    await state.clear()
    await message.answer("‚úÖ –ü—Ä–æ—â–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await signatures_handler(types.CallbackQuery(
        from_user=message.from_user,
        id="dummy",
        chat_instance="dummy",
        message=message
    ))


@router.callback_query(F.data == "delete_greeting")
async def delete_greeting_handler(callback: types.CallbackQuery):
    with Session() as session:
        user = session.get(UserSettings, callback.from_user.id)
        if user:
            user.greeting = None
            session.commit()

    await callback.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É–¥–∞–ª–µ–Ω–æ", show_alert=True)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await signatures_handler(callback)


@router.callback_query(F.data == "delete_farewell")
async def delete_farewell_handler(callback: types.CallbackQuery):
    with Session() as session:
        user = session.get(UserSettings, callback.from_user.id)
        if user:
            user.farewell = None
            session.commit()

    await callback.answer("–ü—Ä–æ—â–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ", show_alert=True)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await signatures_handler(callback)
